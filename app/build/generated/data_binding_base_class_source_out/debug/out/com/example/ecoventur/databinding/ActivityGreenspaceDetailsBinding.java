// Generated by view binder compiler. Do not edit!
package com.example.ecoventur.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecoventur.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGreenspaceDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView CVShare;

  @NonNull
  public final CardView CVWriteReview;

  @NonNull
  public final LinearLayout LLGreenSpaceDetails;

  @NonNull
  public final LinearLayout LLSpaceReviews;

  @NonNull
  public final MapView MVSpaceLocation;

  @NonNull
  public final TextView TVSpaceAddress;

  @NonNull
  public final TextView TVSpaceDistance;

  @NonNull
  public final TextView TVSpaceFee;

  @NonNull
  public final TextView TVSpaceLink;

  @NonNull
  public final TextView TVSpaceName;

  @NonNull
  public final TextView TVSpaceOpeningHours;

  private ActivityGreenspaceDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull CardView CVShare, @NonNull CardView CVWriteReview,
      @NonNull LinearLayout LLGreenSpaceDetails, @NonNull LinearLayout LLSpaceReviews,
      @NonNull MapView MVSpaceLocation, @NonNull TextView TVSpaceAddress,
      @NonNull TextView TVSpaceDistance, @NonNull TextView TVSpaceFee,
      @NonNull TextView TVSpaceLink, @NonNull TextView TVSpaceName,
      @NonNull TextView TVSpaceOpeningHours) {
    this.rootView = rootView;
    this.CVShare = CVShare;
    this.CVWriteReview = CVWriteReview;
    this.LLGreenSpaceDetails = LLGreenSpaceDetails;
    this.LLSpaceReviews = LLSpaceReviews;
    this.MVSpaceLocation = MVSpaceLocation;
    this.TVSpaceAddress = TVSpaceAddress;
    this.TVSpaceDistance = TVSpaceDistance;
    this.TVSpaceFee = TVSpaceFee;
    this.TVSpaceLink = TVSpaceLink;
    this.TVSpaceName = TVSpaceName;
    this.TVSpaceOpeningHours = TVSpaceOpeningHours;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGreenspaceDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGreenspaceDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_greenspace_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGreenspaceDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CVShare;
      CardView CVShare = ViewBindings.findChildViewById(rootView, id);
      if (CVShare == null) {
        break missingId;
      }

      id = R.id.CVWriteReview;
      CardView CVWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (CVWriteReview == null) {
        break missingId;
      }

      id = R.id.LLGreenSpaceDetails;
      LinearLayout LLGreenSpaceDetails = ViewBindings.findChildViewById(rootView, id);
      if (LLGreenSpaceDetails == null) {
        break missingId;
      }

      id = R.id.LLSpaceReviews;
      LinearLayout LLSpaceReviews = ViewBindings.findChildViewById(rootView, id);
      if (LLSpaceReviews == null) {
        break missingId;
      }

      id = R.id.MVSpaceLocation;
      MapView MVSpaceLocation = ViewBindings.findChildViewById(rootView, id);
      if (MVSpaceLocation == null) {
        break missingId;
      }

      id = R.id.TVSpaceAddress;
      TextView TVSpaceAddress = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceAddress == null) {
        break missingId;
      }

      id = R.id.TVSpaceDistance;
      TextView TVSpaceDistance = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceDistance == null) {
        break missingId;
      }

      id = R.id.TVSpaceFee;
      TextView TVSpaceFee = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceFee == null) {
        break missingId;
      }

      id = R.id.TVSpaceLink;
      TextView TVSpaceLink = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceLink == null) {
        break missingId;
      }

      id = R.id.TVSpaceName;
      TextView TVSpaceName = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceName == null) {
        break missingId;
      }

      id = R.id.TVSpaceOpeningHours;
      TextView TVSpaceOpeningHours = ViewBindings.findChildViewById(rootView, id);
      if (TVSpaceOpeningHours == null) {
        break missingId;
      }

      return new ActivityGreenspaceDetailsBinding((LinearLayout) rootView, CVShare, CVWriteReview,
          LLGreenSpaceDetails, LLSpaceReviews, MVSpaceLocation, TVSpaceAddress, TVSpaceDistance,
          TVSpaceFee, TVSpaceLink, TVSpaceName, TVSpaceOpeningHours);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
