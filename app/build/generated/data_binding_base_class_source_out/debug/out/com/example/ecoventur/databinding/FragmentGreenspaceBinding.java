// Generated by view binder compiler. Do not edit!
package com.example.ecoventur.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecoventur.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGreenspaceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView CVEventsWishlistHeader;

  @NonNull
  public final CardView CVGreenEventHeader;

  @NonNull
  public final CardView CVMapView;

  @NonNull
  public final CardView CVSearch;

  @NonNull
  public final SearchView SVGreenSpace;

  @NonNull
  public final TextView TVDateVenue;

  @NonNull
  public final TextView TVEcoCoins;

  @NonNull
  public final TextView TVEventName;

  @NonNull
  public final Button ToggleDiscoverGreenEvents;

  @NonNull
  public final Button ToggleMyEventsWishlist;

  @NonNull
  public final Button ToggleNearbyGreenSpaces;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final RecyclerView recyclerViewDiscoverGreenEvents;

  @NonNull
  public final RecyclerView recyclerViewMyEventsWishlist;

  @NonNull
  public final RecyclerView recyclerViewNearbyGreenSpaces;

  private FragmentGreenspaceBinding(@NonNull LinearLayout rootView,
      @NonNull CardView CVEventsWishlistHeader, @NonNull CardView CVGreenEventHeader,
      @NonNull CardView CVMapView, @NonNull CardView CVSearch, @NonNull SearchView SVGreenSpace,
      @NonNull TextView TVDateVenue, @NonNull TextView TVEcoCoins, @NonNull TextView TVEventName,
      @NonNull Button ToggleDiscoverGreenEvents, @NonNull Button ToggleMyEventsWishlist,
      @NonNull Button ToggleNearbyGreenSpaces, @NonNull MapView mapView,
      @NonNull RecyclerView recyclerViewDiscoverGreenEvents,
      @NonNull RecyclerView recyclerViewMyEventsWishlist,
      @NonNull RecyclerView recyclerViewNearbyGreenSpaces) {
    this.rootView = rootView;
    this.CVEventsWishlistHeader = CVEventsWishlistHeader;
    this.CVGreenEventHeader = CVGreenEventHeader;
    this.CVMapView = CVMapView;
    this.CVSearch = CVSearch;
    this.SVGreenSpace = SVGreenSpace;
    this.TVDateVenue = TVDateVenue;
    this.TVEcoCoins = TVEcoCoins;
    this.TVEventName = TVEventName;
    this.ToggleDiscoverGreenEvents = ToggleDiscoverGreenEvents;
    this.ToggleMyEventsWishlist = ToggleMyEventsWishlist;
    this.ToggleNearbyGreenSpaces = ToggleNearbyGreenSpaces;
    this.mapView = mapView;
    this.recyclerViewDiscoverGreenEvents = recyclerViewDiscoverGreenEvents;
    this.recyclerViewMyEventsWishlist = recyclerViewMyEventsWishlist;
    this.recyclerViewNearbyGreenSpaces = recyclerViewNearbyGreenSpaces;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGreenspaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGreenspaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_greenspace, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGreenspaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CVEventsWishlistHeader;
      CardView CVEventsWishlistHeader = ViewBindings.findChildViewById(rootView, id);
      if (CVEventsWishlistHeader == null) {
        break missingId;
      }

      id = R.id.CVGreenEventHeader;
      CardView CVGreenEventHeader = ViewBindings.findChildViewById(rootView, id);
      if (CVGreenEventHeader == null) {
        break missingId;
      }

      id = R.id.CVMapView;
      CardView CVMapView = ViewBindings.findChildViewById(rootView, id);
      if (CVMapView == null) {
        break missingId;
      }

      id = R.id.CVSearch;
      CardView CVSearch = ViewBindings.findChildViewById(rootView, id);
      if (CVSearch == null) {
        break missingId;
      }

      id = R.id.SVGreenSpace;
      SearchView SVGreenSpace = ViewBindings.findChildViewById(rootView, id);
      if (SVGreenSpace == null) {
        break missingId;
      }

      id = R.id.TVDate_Venue;
      TextView TVDateVenue = ViewBindings.findChildViewById(rootView, id);
      if (TVDateVenue == null) {
        break missingId;
      }

      id = R.id.TVEcoCoins;
      TextView TVEcoCoins = ViewBindings.findChildViewById(rootView, id);
      if (TVEcoCoins == null) {
        break missingId;
      }

      id = R.id.TVEventName;
      TextView TVEventName = ViewBindings.findChildViewById(rootView, id);
      if (TVEventName == null) {
        break missingId;
      }

      id = R.id.ToggleDiscoverGreenEvents;
      Button ToggleDiscoverGreenEvents = ViewBindings.findChildViewById(rootView, id);
      if (ToggleDiscoverGreenEvents == null) {
        break missingId;
      }

      id = R.id.ToggleMyEventsWishlist;
      Button ToggleMyEventsWishlist = ViewBindings.findChildViewById(rootView, id);
      if (ToggleMyEventsWishlist == null) {
        break missingId;
      }

      id = R.id.ToggleNearbyGreenSpaces;
      Button ToggleNearbyGreenSpaces = ViewBindings.findChildViewById(rootView, id);
      if (ToggleNearbyGreenSpaces == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.recyclerViewDiscoverGreenEvents;
      RecyclerView recyclerViewDiscoverGreenEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDiscoverGreenEvents == null) {
        break missingId;
      }

      id = R.id.recyclerViewMyEventsWishlist;
      RecyclerView recyclerViewMyEventsWishlist = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMyEventsWishlist == null) {
        break missingId;
      }

      id = R.id.recyclerViewNearbyGreenSpaces;
      RecyclerView recyclerViewNearbyGreenSpaces = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewNearbyGreenSpaces == null) {
        break missingId;
      }

      return new FragmentGreenspaceBinding((LinearLayout) rootView, CVEventsWishlistHeader,
          CVGreenEventHeader, CVMapView, CVSearch, SVGreenSpace, TVDateVenue, TVEcoCoins,
          TVEventName, ToggleDiscoverGreenEvents, ToggleMyEventsWishlist, ToggleNearbyGreenSpaces,
          mapView, recyclerViewDiscoverGreenEvents, recyclerViewMyEventsWishlist,
          recyclerViewNearbyGreenSpaces);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
