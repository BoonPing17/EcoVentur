// Generated by view binder compiler. Do not edit!
package com.example.ecoventur.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecoventur.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTransitBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView allChallenges;

  @NonNull
  public final RecyclerView allChallenging;

  @NonNull
  public final RecyclerView allCompletedChallenges;

  @NonNull
  public final TextView challengingText;

  @NonNull
  public final TextView completedText;

  @NonNull
  public final TextView exploreTheChallengesText;

  @NonNull
  public final LinearLayout fragmentTransitContainer;

  @NonNull
  public final TextView viewAllChallenges;

  @NonNull
  public final TextView viewAllCompleted;

  private FragmentTransitBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView allChallenges, @NonNull RecyclerView allChallenging,
      @NonNull RecyclerView allCompletedChallenges, @NonNull TextView challengingText,
      @NonNull TextView completedText, @NonNull TextView exploreTheChallengesText,
      @NonNull LinearLayout fragmentTransitContainer, @NonNull TextView viewAllChallenges,
      @NonNull TextView viewAllCompleted) {
    this.rootView = rootView;
    this.allChallenges = allChallenges;
    this.allChallenging = allChallenging;
    this.allCompletedChallenges = allCompletedChallenges;
    this.challengingText = challengingText;
    this.completedText = completedText;
    this.exploreTheChallengesText = exploreTheChallengesText;
    this.fragmentTransitContainer = fragmentTransitContainer;
    this.viewAllChallenges = viewAllChallenges;
    this.viewAllCompleted = viewAllCompleted;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.all_challenges;
      RecyclerView allChallenges = ViewBindings.findChildViewById(rootView, id);
      if (allChallenges == null) {
        break missingId;
      }

      id = R.id.all_challenging;
      RecyclerView allChallenging = ViewBindings.findChildViewById(rootView, id);
      if (allChallenging == null) {
        break missingId;
      }

      id = R.id.all_completed_challenges;
      RecyclerView allCompletedChallenges = ViewBindings.findChildViewById(rootView, id);
      if (allCompletedChallenges == null) {
        break missingId;
      }

      id = R.id.challenging_text;
      TextView challengingText = ViewBindings.findChildViewById(rootView, id);
      if (challengingText == null) {
        break missingId;
      }

      id = R.id.completed_text;
      TextView completedText = ViewBindings.findChildViewById(rootView, id);
      if (completedText == null) {
        break missingId;
      }

      id = R.id.explore_the_challenges_text;
      TextView exploreTheChallengesText = ViewBindings.findChildViewById(rootView, id);
      if (exploreTheChallengesText == null) {
        break missingId;
      }

      LinearLayout fragmentTransitContainer = (LinearLayout) rootView;

      id = R.id.view_all_challenges;
      TextView viewAllChallenges = ViewBindings.findChildViewById(rootView, id);
      if (viewAllChallenges == null) {
        break missingId;
      }

      id = R.id.view_all_completed;
      TextView viewAllCompleted = ViewBindings.findChildViewById(rootView, id);
      if (viewAllCompleted == null) {
        break missingId;
      }

      return new FragmentTransitBinding((LinearLayout) rootView, allChallenges, allChallenging,
          allCompletedChallenges, challengingText, completedText, exploreTheChallengesText,
          fragmentTransitContainer, viewAllChallenges, viewAllCompleted);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
