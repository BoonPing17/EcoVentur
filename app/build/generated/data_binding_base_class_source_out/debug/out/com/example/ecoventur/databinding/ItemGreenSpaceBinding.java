// Generated by view binder compiler. Do not edit!
package com.example.ecoventur.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecoventur.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGreenSpaceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView CVGreenSpaceItem;

  @NonNull
  public final ImageView IVGreenSpace;

  @NonNull
  public final TextView TVApproxDist;

  @NonNull
  public final TextView TVGreenSpaceName;

  @NonNull
  public final TextView TVRating;

  private ItemGreenSpaceBinding(@NonNull CardView rootView, @NonNull CardView CVGreenSpaceItem,
      @NonNull ImageView IVGreenSpace, @NonNull TextView TVApproxDist,
      @NonNull TextView TVGreenSpaceName, @NonNull TextView TVRating) {
    this.rootView = rootView;
    this.CVGreenSpaceItem = CVGreenSpaceItem;
    this.IVGreenSpace = IVGreenSpace;
    this.TVApproxDist = TVApproxDist;
    this.TVGreenSpaceName = TVGreenSpaceName;
    this.TVRating = TVRating;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGreenSpaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGreenSpaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_green_space, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGreenSpaceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView CVGreenSpaceItem = (CardView) rootView;

      id = R.id.IVGreenSpace;
      ImageView IVGreenSpace = ViewBindings.findChildViewById(rootView, id);
      if (IVGreenSpace == null) {
        break missingId;
      }

      id = R.id.TVApproxDist;
      TextView TVApproxDist = ViewBindings.findChildViewById(rootView, id);
      if (TVApproxDist == null) {
        break missingId;
      }

      id = R.id.TVGreenSpaceName;
      TextView TVGreenSpaceName = ViewBindings.findChildViewById(rootView, id);
      if (TVGreenSpaceName == null) {
        break missingId;
      }

      id = R.id.TVRating;
      TextView TVRating = ViewBindings.findChildViewById(rootView, id);
      if (TVRating == null) {
        break missingId;
      }

      return new ItemGreenSpaceBinding((CardView) rootView, CVGreenSpaceItem, IVGreenSpace,
          TVApproxDist, TVGreenSpaceName, TVRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
